
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : tp2
//  @ File Name : EnvoieFichier.java
//  @ Date : 2014-06-06
//  @ Author : Guehel Bouanga
//
//

package tp2.reseau.model;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;



/** 
 * Thread heritant de service abstrait specialise dans  l'envoie de fichier*/
public class EnvoieFichier extends ServiceAbstrait {
	public  static final int PORT=55555;

	private File fichier; 
	private Socket server;
	
	/**Constructeur
	 * @param iPMachineCliente vers quelle machine sera envoye le fichier
	 * @param file fichier a envoyer
	 * @param observateur machine locale qui va etre notifie en tant qu'observateur du service
	 * @throws UnknownHostException
	 * @throws IOException
	 * @throws RuntimeException
	 */
	public EnvoieFichier(String iPMachineCliente, File file, Observateur observateur)
			throws UnknownHostException, IOException , RuntimeException{
	super(observateur);
	
		File fichierAEnvoyer = file;
		if(fichierAEnvoyer.exists()){
			this.server = new Socket(iPMachineCliente,PORT );
			fichier = fichierAEnvoyer;
		}
		else {
			String message = "Fichier inexistant";
			notify(message);
			throw new RuntimeException(message);
		}
	}

	/**
	 * Contenu de la methode Run
	 * creer un flux entrant du fichier 
	 * creer un flux sortant vers le client  */
	public void demarrer() {
		BufferedInputStream bis =null;
		BufferedOutputStream bos = null;
		String message =null;
		try {
			bis = new BufferedInputStream(new FileInputStream(fichier));
			OutputStream os = server.getOutputStream();
			bos = new BufferedOutputStream(os);
			
			int n= 0;
					while((n=bis.read())!=-1){
						bos.write(n);
					}
//					bos.close();
					message ="fichier envoyé";
								

			
		} catch (IOException e) {
			message ="Echec de l'envoie du fichier";
			
		
			e.printStackTrace();
		}
		
		finally{
			try{
				System.out.println(message);
				notify(message);
				if(bis!=null)bis.close();
				if(bos!=null)bos.close();
				server.close();
				
			}catch(IOException e){}
		}
	}
	
	/** Methdoe non utilisée*/
	public boolean reussie() {
		return true;
	}
	

}
