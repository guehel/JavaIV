package vente.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseCommentairePK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private java.lang.Integer _idCom;
	private vente.Billet _billetIdbillet;

	public BaseCommentairePK () {}
	
	public BaseCommentairePK (
		java.lang.Integer _idCom,
		vente.Billet _billetIdbillet) {

		this.setIdCom(_idCom);
		this.setBilletIdbillet(_billetIdbillet);
	}


	public java.lang.Integer getIdCom () {
		return _idCom;
	}

	public void setIdCom (java.lang.Integer _idCom) {
		hashCode = Integer.MIN_VALUE;
		this._idCom = _idCom;
	}

	public vente.Billet getBilletIdbillet () {
		return _billetIdbillet;
	}

	public void setBilletIdbillet (vente.Billet _billetIdbillet) {
		hashCode = Integer.MIN_VALUE;
		this._billetIdbillet = _billetIdbillet;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof vente.CommentairePK)) return false;
		else {
			vente.CommentairePK mObj = (vente.CommentairePK) obj;
			if (null != this.getIdCom() && null != mObj.getIdCom()) {
				if (!this.getIdCom().equals(mObj.getIdCom())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getBilletIdbillet() && null != mObj.getBilletIdbillet()) {
				if (!this.getBilletIdbillet().equals(mObj.getBilletIdbillet())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getIdCom()) {
				sb.append(this.getIdCom().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getBilletIdbillet()) {
				sb.append(this.getBilletIdbillet().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}